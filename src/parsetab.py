
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and boolean comma divide eq equals ge gt id int lbracket le lparen lt minus mod ne not num or plus rbracket rparen semi string times voidprogram : stmtsstmts : stmt stmtsstmts : block : lbracket stmts rbracketstmt : blocktype : int\n            | string\n            | boolean\n            | voiditems : item comma items items : itemitem : iditem : id equals expstmt : type items semistmt : id equals exp semistmt : exp semiexp : exp1 or expexp1 : exp2 and exp1exp2 : exp2 lt exp3\n            | exp2 le exp3\n            | exp2 gt exp3\n            | exp2 ge exp3\n            | exp2 eq exp3\n            | exp2 ne exp3exp3 : exp3 plus exp4\n            | exp3 minus exp4exp4 : exp4 times exp5\n            | exp4 divide exp5\n            | exp4 mod exp5exp5 : minus exp6\n            | not exp6exp6 : idexp6 : numexp : exp1exp1 : exp2exp2 : exp3exp3 : exp4exp4 : exp5exp5 : exp6exp6 : lparen exp rparen'
    
_lr_action_items = {'$end':([0,1,2,3,4,23,28,47,51,68,],[-3,0,-1,-3,-5,-2,-16,-14,-4,-15,]),'id':([0,3,4,5,8,9,10,11,12,17,20,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,49,51,68,],[6,6,-5,26,6,-6,-7,-8,-9,44,44,44,44,-16,44,44,44,44,44,44,44,44,44,44,44,44,44,-14,26,44,-4,-15,]),'lbracket':([0,3,4,8,28,47,51,68,],[8,8,-5,8,-16,-14,-4,-15,]),'int':([0,3,4,8,28,47,51,68,],[9,9,-5,9,-16,-14,-4,-15,]),'string':([0,3,4,8,28,47,51,68,],[10,10,-5,10,-16,-14,-4,-15,]),'boolean':([0,3,4,8,28,47,51,68,],[11,11,-5,11,-16,-14,-4,-15,]),'void':([0,3,4,8,28,47,51,68,],[12,12,-5,12,-16,-14,-4,-15,]),'minus':([0,3,4,6,8,15,16,18,19,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,54,55,56,57,58,59,60,61,62,63,64,65,68,],[17,17,-5,-32,17,39,-37,-38,-39,-33,17,17,-16,17,17,17,17,17,17,17,17,17,17,17,17,17,-30,-32,-31,-14,17,-4,39,39,39,39,39,39,-25,-26,-27,-28,-29,-40,-15,]),'not':([0,3,4,8,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,47,49,51,68,],[20,20,-5,20,20,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,-14,20,-4,-15,]),'num':([0,3,4,8,17,20,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,47,49,51,68,],[21,21,-5,21,21,21,21,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,-14,21,-4,-15,]),'lparen':([0,3,4,8,17,20,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,47,49,51,68,],[22,22,-5,22,22,22,22,22,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,-14,22,-4,-15,]),'rbracket':([3,4,8,23,28,29,47,51,68,],[-3,-5,-3,-2,-16,51,-14,-4,-15,]),'equals':([6,26,],[27,49,]),'times':([6,16,18,19,21,43,44,45,60,61,62,63,64,65,],[-32,40,-38,-39,-33,-30,-32,-31,40,40,-27,-28,-29,-40,]),'divide':([6,16,18,19,21,43,44,45,60,61,62,63,64,65,],[-32,41,-38,-39,-33,-30,-32,-31,41,41,-27,-28,-29,-40,]),'mod':([6,16,18,19,21,43,44,45,60,61,62,63,64,65,],[-32,42,-38,-39,-33,-30,-32,-31,42,42,-27,-28,-29,-40,]),'plus':([6,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,38,-37,-38,-39,-33,-30,-32,-31,38,38,38,38,38,38,-25,-26,-27,-28,-29,-40,]),'and':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,31,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'lt':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,32,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'le':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,33,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'gt':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,34,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'ge':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,35,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'eq':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,36,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'ne':([6,14,15,16,18,19,21,43,44,45,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,37,-36,-37,-38,-39,-33,-30,-32,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'or':([6,13,14,15,16,18,19,21,43,44,45,53,54,55,56,57,58,59,60,61,62,63,64,65,],[-32,30,-35,-36,-37,-38,-39,-33,-30,-32,-31,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'semi':([6,7,13,14,15,16,18,19,21,24,25,26,43,44,45,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[-32,28,-34,-35,-36,-37,-38,-39,-33,47,-11,-12,-30,-32,-31,68,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,-10,-13,]),'rparen':([13,14,15,16,18,19,21,43,44,45,46,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[-34,-35,-36,-37,-38,-39,-33,-30,-32,-31,65,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,]),'comma':([13,14,15,16,18,19,21,25,26,43,44,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,],[-34,-35,-36,-37,-38,-39,-33,48,-12,-30,-32,-31,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-40,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmts':([0,3,8,],[2,23,29,]),'stmt':([0,3,8,],[3,3,3,]),'block':([0,3,8,],[4,4,4,]),'type':([0,3,8,],[5,5,5,]),'exp':([0,3,8,22,27,30,49,],[7,7,7,46,50,52,67,]),'exp1':([0,3,8,22,27,30,31,49,],[13,13,13,13,13,13,53,13,]),'exp2':([0,3,8,22,27,30,31,49,],[14,14,14,14,14,14,14,14,]),'exp3':([0,3,8,22,27,30,31,32,33,34,35,36,37,49,],[15,15,15,15,15,15,15,54,55,56,57,58,59,15,]),'exp4':([0,3,8,22,27,30,31,32,33,34,35,36,37,38,39,49,],[16,16,16,16,16,16,16,16,16,16,16,16,16,60,61,16,]),'exp5':([0,3,8,22,27,30,31,32,33,34,35,36,37,38,39,40,41,42,49,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,62,63,64,18,]),'exp6':([0,3,8,17,20,22,27,30,31,32,33,34,35,36,37,38,39,40,41,42,49,],[19,19,19,43,45,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'items':([5,48,],[24,66,]),'item':([5,48,],[25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmts','program',1,'p_program','ins_par.py',71),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','ins_par.py',76),
  ('stmts -> <empty>','stmts',0,'p_stmts_empty','ins_par.py',81),
  ('block -> lbracket stmts rbracket','block',3,'p_block','ins_par.py',86),
  ('stmt -> block','stmt',1,'p_stmt_block','ins_par.py',91),
  ('type -> int','type',1,'p_type','ins_par.py',96),
  ('type -> string','type',1,'p_type','ins_par.py',97),
  ('type -> boolean','type',1,'p_type','ins_par.py',98),
  ('type -> void','type',1,'p_type','ins_par.py',99),
  ('items -> item comma items','items',3,'p_items','ins_par.py',104),
  ('items -> item','items',1,'p_items_one','ins_par.py',109),
  ('item -> id','item',1,'p_item','ins_par.py',114),
  ('item -> id equals exp','item',3,'p_item_init','ins_par.py',119),
  ('stmt -> type items semi','stmt',3,'p_stmt_decl','ins_par.py',124),
  ('stmt -> id equals exp semi','stmt',4,'p_stmt_ass','ins_par.py',129),
  ('stmt -> exp semi','stmt',2,'p_stmt_exp','ins_par.py',134),
  ('exp -> exp1 or exp','exp',3,'p_exp_or','ins_par.py',139),
  ('exp1 -> exp2 and exp1','exp1',3,'p_exp_and','ins_par.py',144),
  ('exp2 -> exp2 lt exp3','exp2',3,'p_exp_rel','ins_par.py',149),
  ('exp2 -> exp2 le exp3','exp2',3,'p_exp_rel','ins_par.py',150),
  ('exp2 -> exp2 gt exp3','exp2',3,'p_exp_rel','ins_par.py',151),
  ('exp2 -> exp2 ge exp3','exp2',3,'p_exp_rel','ins_par.py',152),
  ('exp2 -> exp2 eq exp3','exp2',3,'p_exp_rel','ins_par.py',153),
  ('exp2 -> exp2 ne exp3','exp2',3,'p_exp_rel','ins_par.py',154),
  ('exp3 -> exp3 plus exp4','exp3',3,'p_exp_add','ins_par.py',159),
  ('exp3 -> exp3 minus exp4','exp3',3,'p_exp_add','ins_par.py',160),
  ('exp4 -> exp4 times exp5','exp4',3,'p_exp_mul','ins_par.py',165),
  ('exp4 -> exp4 divide exp5','exp4',3,'p_exp_mul','ins_par.py',166),
  ('exp4 -> exp4 mod exp5','exp4',3,'p_exp_mul','ins_par.py',167),
  ('exp5 -> minus exp6','exp5',2,'p_exp_neg','ins_par.py',172),
  ('exp5 -> not exp6','exp5',2,'p_exp_neg','ins_par.py',173),
  ('exp6 -> id','exp6',1,'p_exp_var','ins_par.py',178),
  ('exp6 -> num','exp6',1,'p_exp_const','ins_par.py',183),
  ('exp -> exp1','exp',1,'p_exp0','ins_par.py',188),
  ('exp1 -> exp2','exp1',1,'p_exp1','ins_par.py',193),
  ('exp2 -> exp3','exp2',1,'p_exp2','ins_par.py',196),
  ('exp3 -> exp4','exp3',1,'p_exp3','ins_par.py',199),
  ('exp4 -> exp5','exp4',1,'p_exp4','ins_par.py',202),
  ('exp5 -> exp6','exp5',1,'p_exp5','ins_par.py',205),
  ('exp6 -> lparen exp rparen','exp6',3,'p_exp6','ins_par.py',208),
]
